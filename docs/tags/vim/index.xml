<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Vim on 项目介绍</title>
    <link>https://steamdk.github.io/tags/vim/</link>
    <description>Recent content in Vim on 项目介绍</description>
    <image>
      <title>项目介绍</title>
      <url>https://i.postimg.cc/7hwBy7VS/calcr.png</url>
      <link>https://i.postimg.cc/7hwBy7VS/calcr.png</link>
    </image>
    <generator>Hugo -- 0.138.0</generator>
    <language>zh</language>
    <copyright>©2024 项目介绍</copyright>
    <lastBuildDate>Mon, 09 Sep 2024 18:35:25 +0800</lastBuildDate>
    <atom:link href="https://steamdk.github.io/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vim操作手册</title>
      <link>https://steamdk.github.io/posts/vim%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/</link>
      <pubDate>Mon, 09 Sep 2024 18:35:25 +0800</pubDate>
      <guid>https://steamdk.github.io/posts/vim%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/</guid>
      <description>&lt;h1 id=&#34;日常技巧&#34;&gt;日常技巧&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;CTRL + r&lt;/code&gt; 等于 window 下的默认 &lt;code&gt;CTRL + y&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;CTRL + f   查找&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;1-关于vim&#34;&gt;1. 关于Vim&lt;/h1&gt;
&lt;h2 id=&#34;11-vim的几种模式&#34;&gt;1.1 Vim的几种模式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;正常模式：可以使用快捷键命令，或按:输入命令行。&lt;/li&gt;
&lt;li&gt;插入模式：可以输入文本，在正常模式下，按i、a、o等都可以进入插入模式。&lt;/li&gt;
&lt;li&gt;可视模式：正常模式下按v可以进入可视模式， 在可视模式下，移动光标可以选择文本。按V进入可视行模式， 总是整行整行的选中。ctrl+v进入可视块模式。&lt;/li&gt;
&lt;li&gt;替换模式：正常模式下，按R进入。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-启动vim&#34;&gt;2. 启动Vim&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;vim -c cmd file: 在打开文件前，先执行指定的命令；&lt;/li&gt;
&lt;li&gt;vim -r file: 恢复上次异常退出的文件；&lt;/li&gt;
&lt;li&gt;vim -R file: 以只读的方式打开文件，但可以强制保存；&lt;/li&gt;
&lt;li&gt;vim -M file: 以只读的方式打开文件，不可以强制保存；&lt;/li&gt;
&lt;li&gt;vim -y num file: 将编辑窗口的大小设为num行；&lt;/li&gt;
&lt;li&gt;vim + file: 从文件的末尾开始；&lt;/li&gt;
&lt;li&gt;vim +num file: 从第num行开始；&lt;/li&gt;
&lt;li&gt;vim +/string file: 打开file，并将光标停留在第一个找到的string上。&lt;/li&gt;
&lt;li&gt;vim &amp;ndash;remote file: 用已有的vim进程打开指定的文件。 如果你不想启用多个vim会话，这个很有用。但要注意， 如果你用vim，会寻找名叫VIM的服务器；如果你已经有一个gvim在运行了， 你可以用gvim &amp;ndash;remote file在已有的gvim中打开文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-文档操作&#34;&gt;3. 文档操作&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;:e file &amp;ndash;关闭当前编辑的文件，并开启新的文件。 如果对当前文件的修改未保存，vi会警告。&lt;/li&gt;
&lt;li&gt;:e! file &amp;ndash;放弃对当前文件的修改，编辑新的文件。&lt;/li&gt;
&lt;li&gt;:e+file &amp;ndash; 开始新的文件，并从文件尾开始编辑。&lt;/li&gt;
&lt;li&gt;:e+n file &amp;ndash; 开始新的文件，并从第n行开始编辑。&lt;/li&gt;
&lt;li&gt;:enew &amp;ndash;编译一个未命名的新文档。(CTRL-W n)&lt;/li&gt;
&lt;li&gt;:e &amp;ndash; 重新加载当前文档。&lt;/li&gt;
&lt;li&gt;:e! &amp;ndash; 重新加载当前文档，并丢弃已做的改动。&lt;/li&gt;
&lt;li&gt;:e#或ctrl+^ &amp;ndash; 回到刚才编辑的文件，很实用。&lt;/li&gt;
&lt;li&gt;:f或ctrl+g &amp;ndash; 显示文档名，是否修改，和光标位置。&lt;/li&gt;
&lt;li&gt;:f filename &amp;ndash; 改变编辑的文件名，这时再保存相当于另存为。&lt;/li&gt;
&lt;li&gt;gf &amp;ndash; 打开以光标所在字符串为文件名的文件。&lt;/li&gt;
&lt;li&gt;:w &amp;ndash; 保存修改。&lt;/li&gt;
&lt;li&gt;:n1,n2w filename &amp;ndash; 选择性保存从某n1行到另n2行的内容。&lt;/li&gt;
&lt;li&gt;:wq &amp;ndash; 保存并退出。&lt;/li&gt;
&lt;li&gt;ZZ &amp;ndash; 保存并退出。&lt;/li&gt;
&lt;li&gt;:x &amp;ndash; 保存并退出。&lt;/li&gt;
&lt;li&gt;:q[uit] ——退出当前窗口。(CTRL-W q或CTRL-W CTRL-Q)&lt;/li&gt;
&lt;li&gt;:saveas newfilename &amp;ndash; 另存为&lt;/li&gt;
&lt;li&gt;:browse e &amp;ndash; 会打开一个文件浏览器让你选择要编辑的文件。 如果是终端中，则会打开netrw的文件浏览窗口； 如果是gvim，则会打开一个图形界面的浏览窗口。 实际上:browse后可以跟任何编辑文档的命令，如sp等。 用browse打开的起始目录可以由browsedir来设置：
&lt;ul&gt;
&lt;li&gt;:set browsedir=last &amp;ndash; 用上次访问过的目录（默认）；&lt;/li&gt;
&lt;li&gt;:set browsedir=buffer &amp;ndash; 用当前文件所在目录；&lt;/li&gt;
&lt;li&gt;:set browsedir=current &amp;ndash; 用当前工作目录；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;:Sex &amp;ndash; 水平分割一个窗口，浏览文件系统；&lt;/li&gt;
&lt;li&gt;:Vex &amp;ndash; 垂直分割一个窗口，浏览文件系统；&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-光标的移动&#34;&gt;4. 光标的移动&lt;/h1&gt;
&lt;h2 id=&#34;41-基本移动&#34;&gt;4.1 基本移动&lt;/h2&gt;
&lt;p&gt;以下移动都是在normal模式下。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
